server:
  port: 8080

spring:
  application:
    name: gateway

    profiles:
      active: path_route

  zipkin:
    base-url: http://localhost:9411

  cloud:
    gateway:
      discovery:
        locator:
          #表明gateway开启服务注册和发现的功能，
          #并且spring cloud gateway自动根据服务发现为每一个服务创建了一个router，
          #这个router将以服务名开头的请求路径转发到对应的服务
          enabled: true
          #是将请求路径上的服务名配置为小写
          #（因为服务注册的时候，向注册中心注册时将服务名转成大写的了），
          #比如以/service-hi/*的请求路径被路由转发到服务名为service-hi的服务上。
          lowerCaseServiceId: true

# 注册中心地址
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8000/eureka/
    #网关不用注册到注册中心中，因为没其他微服务调用他
    register-with-eureka: false
    #这个必须是true fetchRegistry打开才能从eureka拉取服务列表
    fetch-registry: true
  instance:
    prefer-ip-address: true

##---------------------OAuth2---------------------
#security:
#  oauth2:
#    client:
#      access-token-uri: http://localhost:${server.port}/auth/oauth/token
#      user-authorization-uri: http://localhost:${server.port}/auth/oauth/authorize
#      client-id: web
#    resource:
#      user-info-uri:  http://localhost:${server.port}/auth/javayh/member
#      prefer-token-info: false

---
spring:
  cloud:
    gateway:
      discovery:
        locator:
          enabled: false
          lowerCaseServiceId: true
      routes:
        - id: service-1
          #即service-1服务的负载均衡地址
          uri: lb://service-1
          predicates:
            - Path=/demo-1/**
          #用StripPrefix的filter 在转发之前将/demo去掉
          filters:
            - StripPrefix=1

        - id: service-2
          uri: lb://service-2
          predicates:
            - Path=/demo-2/**
          filters:
            - StripPrefix=1

        - id: feign
          uri: lb://feign
          predicates:
            - Path=/feign/**
          filters:
            - StripPrefix=1